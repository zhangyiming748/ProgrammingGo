package niustr1

import "testing"

/*
牛牛想知道在一个字符串s中是否有两个不重叠的子串"NB"和"BN"。
例如，在一个字符串中出现一个子串为"NBN"，那么就是有重叠的。
由于字符串可能会很长，所以牛牛无法解决该问题，所以他想请你帮忙，给定一个字符串s，如果有两个不重叠的子串"NB"和"BN"，返回"YES"，反之，返回"NO"。
输入：
"NBN"
返回值：
"NO"
输入：
"NBYBN"
复制
返回值：
"YES"
*/
func solve(s string) string {
	// write code here
	var (
		n int
		b int
	)

	if nb := findNB(s); nb != -1 {
		n = nb + 1
	}
	if bn := findBN(s); bn != -1 {
		b = bn
	}
	if n < b {
		return "YES"
	}
	return "NO"
}
func findNB(s string) int {
	b := []byte(s)
	for i := 0; i < len(b)-1; i++ {
		if b[i] == 'N' && b[i+1] == 'B' {
			return i
		}
	}
	return -1
}
func findBN(s string) int {
	b := []byte(s)
	for i := 0; i < len(b)-1; i++ {
		if b[i] == 'B' && b[i+1] == 'N' {
			return i
		}
	}
	return -1
}
func TestSolve(t *testing.T) {
	e
	e2 := "KTKMFPJZCRPARYTIZFPMHJNVKDMQYJMGTXTGRMLHYJVNMHXVZSLVMQUQWEZRZLJDKDGXCPYWPHNTRKOSUWJBELHZMUSNJKAUFUKMKAZFDLTJWJVMKMPKPEZOCBWPTMJOGVFMVTPXOOWMCTEYUNKBTFPUECUJHRPURESHOCSSUOTAVWROCZXHEJEIXFEZOTSCNPHWQOTZUBFOTUROPHMONGHGEIRZWYPXMVROJZBUCKXZYYILDJYPWWBZPYBJVDTEFYLPATNOXDCNAZBCXLLNKQMWJFXNATWZSUCTLVGAUCDNZXDJPQYAPELBGCTDOQLIOOHRWMPGLAMUTMBNTSLGGRAYKBNDTQQAJCHCBYTBCZWSHGYTZZFIJZHIXUDJQCUKHSVJGFWOJUWOJFRHBBJTACRQDGKKJEVPXBJNTKNDKDHHPIDCYJAGWTJBNLADHYUIHTIYCDGJMIWVQMSTFUZAFEZZZCDLWMSRODHKFYPZZOEGUXHMGQONGFJYELQOBRVUFVLYERBDLBQNBPAQOPGHJHQUBSLCHUVCWZVBQZHJEDJRDZBLRVLDRVCPMQDIIZLCGACTDPPESVWRRHVQLVEQSUGRTRLNFYVOKSZPZLZTXSRHLTZCIIPGYZNMGBDQUBKRXWIOABIHPTJDHCTFCDTQVZEEFTFHIFNGQOGGCFAZOGHTGMLYOPHXLNCJBFACNXZDPCZSUGIBGZCRKVEZADTRXOQGVXQDZZFMXRFNJVDBBGPVLSIJVCCVCBDUHUUYILOWKXDBDXCYAZXNBZCLRFAZEOTUUNJHCHLMGKQZZVOXLPNNWBRPFTYSIVVGQQEENAJFFHJHJMYWAGTPDIQGPSAZWYITDPYXTWOGJMFKXNBEHGEHBAQBVMTAYMTNVUMOZVFNKFAZPVCAOHUFYKKMAOAWWKDOIFJEFQJGIFTKZHZKASBJFYHYZGUUAWBENBMMHEPCDQZCJBPHUEAKKZFWYWKKJYSIMPFPNBMGLRUBYNQI"
	ret1 := solve(e1)
	ret2 := solve(e2)
	t.Log(ret1, ret2)
}
